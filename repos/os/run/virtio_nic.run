#
# Build
#

assert_spec virtio

set build_components { core init timer drivers/nic/virtio_nic app/ping server/nic_bridge }

source ${genode_dir}/repos/base/run/platform_drv.inc
append_platform_drv_build_components

source ${genode_dir}/repos/os/run/virtio.inc
append_virtio_bus_build_components

build $build_components

create_boot_directory

set use_acpica_as_acpi_drv 0

proc platform_drv_policy {} {
	global use_acpica_as_acpi_drv
	set policy ""

	append_if $use_acpica_as_acpi_drv policy {
			<policy label="acpi_drv -> "> <pci class="ALL"/> </policy>}

	append policy {
			<policy label_prefix="virtio_bus"> <pci class="ALL"/> </policy>}

	return $policy
}

proc virtio_bus_policy { } {
    set policy {
	<policy label_prefix="virtio_nic">
		<device type="nic" />
	</policy>}
    return $policy
}

#
# Generate config
#
set config {
<config verbose="no">
	<parent-provides>
		<service name="CPU"/>
		<service name="IO_MEM"/>
		<service name="IO_PORT"/>
		<service name="IRQ"/>
		<service name="LOG"/>
		<service name="PD"/>
		<service name="RM"/>
		<service name="ROM"/>
	</parent-provides>
	<default-route>
		<any-service> <parent/> <any-child/> </any-service>
	</default-route>
	<default caps="100"/>

	<start name="timer">
		<resource name="RAM" quantum="1M"/>
		<provides><service name="Timer"/></provides>
	</start>}

append_platform_drv_config
append_virtio_bus_config

append config {
	<start name="virtio_nic">
		<resource name="RAM" quantum="640K"/>
		<provides> <service name="Nic"/> </provides>
		<config verbose="false"/>
	</start>

	<start name="nic_bridge" caps="200">
		<resource name="RAM" quantum="10M"/>
		<provides><service name="Nic"/></provides>
		<config mac="02:02:02:02:03:00">
			<policy label_prefix="ping"/>
		</config>
		<route>
		<service name="Nic"> <child name="virtio_nic"/> </service>
			<any-service> <parent/> <any-child/> </any-service>
		</route>
	</start>

	<start name="ping">
		<binary name="ping"/>
		<resource name="RAM" quantum="8M"/>
		<config verbose="false" dst_ip="10.0.2.2" period_sec="1" count="3"/>
		<route>
			<service name="Nic"> <child name="nic_bridge"/> </service>
			<any-service> <parent/> <any-child/> </any-service>
		</route>
	</start>

</config>}

install_config $config

#
# Boot image
#
set boot_modules { core ld.lib.so init timer virtio_nic ping nic_bridge}

append_platform_drv_boot_modules
append_virtio_bus_boot_modules

build_boot_image $boot_modules

append qemu_args " -nographic"
append_qemu_nic_args

set done_string ".*\"ping\" exited with exit value 0.*\n"

run_genode_until $done_string 30
